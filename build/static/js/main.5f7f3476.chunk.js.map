{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","console","log","_this","storeName","current","value","props","history","push","react_default","a","createElement","action","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","react_transition_group","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","Fish","details","src","alt","disabled","addToOrder","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.5f7f3476.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport { getFunName } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StorePicker extends React.Component {\r\n    myInput = React.createRef();\r\n\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    }\r\n\r\n    goToStore = event => {\r\n        // Stop the form from submiting\r\n        event.preventDefault();\r\n        // get the text from that input\r\n        console.log(this.myInput);\r\n        const storeName = this.myInput.current.value;\r\n        // 3. Change the page to /store/whatever-they-entered\r\n        this.props.history.push(`/store/${storeName}`);\r\n        \r\n    }\r\n    render() {\r\n        return(\r\n            <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\r\n                <h2>Plase enter a store</h2>\r\n                { /* comment */ }\r\n                <input  \r\n                    type=\"text\" \r\n                    ref = {this.myInput}\r\n                    required\r\n                    placeholder=\"Store name\" \r\n                    defaultValue={getFunName()} \r\n                />\r\n                <button type=\"submit\">Visit store</button>\r\n            </form>           \r\n        ); \r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <header className=\"top\">\r\n        <h1>\r\n            Catch\r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">Of</span>\r\n                <span className=\"the\">  The</span>\r\n            </span>\r\n            Day\r\n        </h1>   \r\n        <h3 className=\"tagline\">\r\n            <span>{props.tagline}</span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Order extends React.Component {\r\n    static propTypes ={\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    }\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        // make sure the fish is loaded before we continue\r\n        if(!fish) return null;\r\n        \r\n        if(!isAvailable) {\r\n            return (\r\n                <CSSTransition \r\n                    classNames=\"order\" \r\n                    key={key} \r\n                    timeout={{ enter: 500, exit: 500 }}>\r\n                    <li key={key}>\r\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\r\n                    </li>\r\n                </CSSTransition>\r\n            );\r\n        }\r\n        return (\r\n        <CSSTransition \r\n            classNames=\"order\" \r\n            key={key} \r\n            timeout={{ enter: 250, exit: 250 }}>\r\n                <li key={key}>\r\n                <span>\r\n                    <TransitionGroup component=\"span\" className=\"count\">\r\n                        <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500 }}>\r\n                            <span>{count}</span>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                        lbs {fish.name}\r\n                        {formatPrice(fish.price)}\r\n                        <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n                    </span>\r\n                </li>\r\n        </CSSTransition>\r\n        );    \r\n    }\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    <strong>Total:{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef= React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    createFish = event => {\r\n        //stop form from submitting\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value\r\n        };\r\n        this.props.addFish(fish);\r\n        //refresh the form\r\n        event.currentTarget.reset();\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n                <select name=\"status\" ref={this.statusRef}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold out</option>\r\n                </select>\r\n                <textarea name=\"desc\" ref={this.descRef} type=\"text\" placeholder=\"Desc\" />\r\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n                <button type=\"submit\"> + Add Fish</button>\r\n            </form>       \r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    }\r\n    handleChange = event => {\r\n        console.log(event.currentTarget.value);\r\n        // update that fish\r\n        // take a copy of the updated fish\r\n        const updatedFish = { \r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        //console.log(updatedFish);\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fish-edit\">\r\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\r\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status} >\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea type=\"text\" name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove fish</button>\r\n            </div>         \r\n        );\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button \r\n            className=\"github\" \r\n            onClick={() => props.authenticate(\"Github\")}\r\n        >\r\n            Log in With Github\r\n        </button>\r\n        <button \r\n            className=\"twitter\" \r\n            onClick={() => props.authenticate(\"Twitter\")}\r\n        >\r\n            Log in With Twitter\r\n        </button>\r\n        <button \r\n            className=\"facebook\" \r\n            onClick={() => props.authenticate(\"Facebook\")}\r\n        >\r\n            Log in With Facebook\r\n        </button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({    \r\n    apiKey: \"AIzaSyCSKSQrhcA8XJFJRT9TjdUJuSU6rjv4X0o\",\r\n    authDomain: \"catch-of-the-day-andrei-cirlan.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-andrei-cirlan.firebaseio.com\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// this is a names export\r\nexport { firebaseApp }\r\n\r\n// This is a default export\r\nexport default base;","import React from 'react';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport PropTypes from 'prop-types';\r\nimport base, { firebaseApp } from '../base';\r\nimport firebase from 'firebase';\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    }\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        //look up the current store in the firebase database\r\n        const store = await base.fetch(this.props.storeId, { context : this });\r\n        //claim it if there is no owner\r\n        if(!store.owner) {\r\n            //save it as our own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        };\r\n        // set the state of the inventory component to reflect the current user\r\n        this.setState ({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n    }\r\n\r\n    authenticate = provider => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    }\r\n\r\n    logout = async () => {\r\n        console.log(\"Logging out!!\");\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    }\r\n\r\n    render() {\r\n        const logout = <button onClick={this.logout}>Log Out</button>\r\n        //check if they are log in\r\n        if(!this.state.uid) {\r\n            return <Login authenticate={this.authenticate} />\r\n        } \r\n        \r\n        // check if they are not the owner of the store\r\n        if(this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you are not the owner!!</p>\r\n                    {logout}\r\n                </div>    \r\n            )\r\n        } \r\n\r\n        // They must be the owner, render the inventory\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => (\r\n                    <EditFishForm \r\n                        key={key} \r\n                        index={key} \r\n                        fish={this.props.fishes[key]} \r\n                        updateFish={this.props.updateFish}\r\n                        deleteFish={this.props.deleteFish}\r\n                    />\r\n                ))}\r\n                <AddFishForm addFish={this.props.addFish}/>\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n        const image = this.props.details.image;\r\n        const name = this.props.details.name;\r\n        const price = this.props.details.price;\r\n        const desc = this.props.details.desc;\r\n        const status = this.props.details.status;\r\n        const isAvailable = status === 'available';\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button \r\n                    disabled={!isAvailable} \r\n                    onClick={() =>\r\n                    this.props.addToOrder(this.props.index)}\r\n                >\r\n                    {isAvailable ? \"Add to order\" : \"Sold out\"}</button>\r\n            </li>          \r\n        );\r\n    }\r\n}\r\n\r\nexport default Fish;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport Fish from './Fish';\r\nimport sampleFishes from '../sample-fishes';\r\nimport base from '../base';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object \r\n    }\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        // first reinstate our localStorage\r\n        const localStorageRef= localStorage.getItem(params.storeId);\r\n        //console.log(localStorageRef);\r\n        if(localStorageRef) {\r\n            this.setState({ order: JSON.parse(localStorageRef )});\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log(this.state.order);\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n\r\n    addFish = fish => {\r\n        //take a copy of the existing state\r\n        const fishes = {...this.state.fishes};\r\n        //add our new fish to that fishes var\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        //set the new fishes object to state\r\n        this.setState({\r\n            fishes: fishes  //(fishes)\r\n        });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        //take a copy of the current state\r\n        const fishes = { ...this.state.fishes };\r\n        //update that state\r\n        fishes[key] = updatedFish;\r\n        //set that to state\r\n        this.setState({ fishes: fishes});\r\n    }\r\n\r\n    deleteFish = (key) => {\r\n        // take a copy of state\r\n        const fishes = { ...this.state.fishes };\r\n        //update the state\r\n        fishes[key] = null;\r\n        //update the state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    addToOrder = (key) => {\r\n        //take a copy of state\r\n        const order = {...this.state.order};\r\n        //either add to the order or update the number in the order\r\n        order[key] = order[key] + 1 || 1;\r\n        //call setState to update our state object\r\n        this.setState({\r\n            order: order\r\n        });\r\n    }\r\n\r\n    removeFromOrder = key => {\r\n        // take a copy of state\r\n        const order = { ...this.state.order };\r\n        //remove the item from the order\r\n        delete order[key];\r\n        //update the state\r\n        this.setState({ order });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({\r\n            fishes: sampleFishes\r\n        }); \r\n    }\r\n\r\n\r\n    render() {       \r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\"/>\r\n                    <ul className=\"fishes\">\r\n                        {Object.keys(this.state.fishes).map(key => (\r\n                            <Fish   \r\n                                key={key} \r\n                                index = {key}\r\n                                details={this.state.fishes[key]}\r\n                                addToOrder={this.addToOrder}\r\n                            />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <Order \r\n                    fishes={this.state.fishes} \r\n                    order={this.state.order}\r\n                    removeFromOrder = {this.removeFromOrder}\r\n                />\r\n                <Inventory \r\n                    addFish={this.addFish}\r\n                    updateFish={this.updateFish} \r\n                    deleteFish={this.deleteFish}\r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    fishes={this.state.fishes}   \r\n                    storeId={this.props.match.params.storeId}                \r\n                />    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not found!!!!!!</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route  component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector(\"#main\"));"],"sourceRoot":""}